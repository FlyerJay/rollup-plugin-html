{"version":3,"file":"rollup-plugin-html.cjs.js","sources":["../src/index.js"],"sourcesContent":["/**\n * @author flyerjay\n * @desc generate index.html & auto inject output file\n */\n\nconst path = require('path')\nconst fs = require('fs')\n\nfunction readFile(file) {\n    return new Promise((resolve, reject) => {\n        fs.readFile(path.resolve(process.cwd(), file), (err, body) => {\n            if (!err) {\n                resolve(Buffer.from(body).toString('utf-8'))\n            } else {\n                resolve('')\n            }\n        })\n    })\n}\n\nmodule.exports = function(options = {}) {\n    const file = options.template\n    const _template = \n    `<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>rollup-plugin-html</title>\n    </head>\n    <body>\n    </body>\n    </html>`\n    return {\n        name: 'rollup-plugin-html',\n\n        async onwrite (config) {\n            var folder = config.file.split('/')[0]\n            let template = await readFile(file) || _template\n            template = template.replace(/<body>([\\s\\S]*)<\\/body>/, (template, body) => {\n                var src = path.relative(folder, config.file)\n                if (src.charAt(0) !== '.') {\n                    src = './' + src\n                }\n                return `<body>${body}<script src=\"${src}\"></script></body>`\n            })\n            const data = new Uint8Array(Buffer.from(template))\n            await new Promise((resolve, reject) => {\n                fs.writeFile('dist/index.html', data, function(err) {\n                    if (!err) {\n                        resolve()\n                    } else {\n                        reject(err)\n                    }\n                })\n            })\n        }\n    }\n}"],"names":["readFile","file","Promise","resolve","reject","fs","path","process","cwd","err","body","Buffer","from","toString","options","template","_template","name","onwrite","config","folder","split","replace","src","relative","charAt","data","Uint8Array","writeFile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAQA,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;SACb,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IACpCC,EAAE,CAACL,QAAH,CAAYM,IAAI,CAACH,OAAL,CAAaI,OAAO,CAACC,GAAR,EAAb,EAA4BP,IAA5B,CAAZ,EAA+C,UAACQ,GAAD,EAAMC,IAAN,EAAe;UACtD,CAACD,GAAL,EAAU;QACNN,OAAO,CAACQ,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,QAAlB,CAA2B,OAA3B,CAAD,CAAP;OADJ,MAEO;QACHV,OAAO,CAAC,EAAD,CAAP;;KAJR;GADG,CAAP;;;AAWJ,OAAc,GAAG,YAAA,GAAuB;MAAdW,OAAc,uEAAJ,EAAI;MAC9Bb,IAAI,GAAGa,OAAO,CAACC,QAArB;MACMC,SAAS,+UAAf;SAYO;IACHC,IAAI,EAAE,oBADH;IAGGC,OAHH;;;+CAGYC,MAHZ;;;;;;gBAIKC,MAJL,GAIcD,MAAM,CAAClB,IAAP,CAAYoB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAJd;;uBAKsBrB,QAAQ,CAACC,IAAD,CAL9B;;;;;;;;;;8BAKwCe,SALxC;;;gBAKKD,QALL;gBAMCA,QAAQ,GAAGA,QAAQ,CAACO,OAAT,CAAiB,yBAAjB,EAA4C,UAACP,QAAD,EAAWL,IAAX,EAAoB;sBACnEa,GAAG,GAAGjB,IAAI,CAACkB,QAAL,CAAcJ,MAAd,EAAsBD,MAAM,CAAClB,IAA7B,CAAV;;sBACIsB,GAAG,CAACE,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;oBACvBF,GAAG,GAAG,OAAOA,GAAb;;;yCAEYb,IAAhB,2BAAoCa,GAApC;iBALO,CAAX;gBAOMG,IAbP,GAac,IAAIC,UAAJ,CAAehB,MAAM,CAACC,IAAP,CAAYG,QAAZ,CAAf,CAbd;;uBAcO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;kBACnCC,EAAE,CAACuB,SAAH,CAAa,iBAAb,EAAgCF,IAAhC,EAAsC,UAASjB,GAAT,EAAc;wBAC5C,CAACA,GAAL,EAAU;sBACNN,OAAO;qBADX,MAEO;sBACHC,MAAM,CAACK,GAAD,CAAN;;mBAJR;iBADE,CAdP;;;;;;;;;;;;;;;;GAAP;CAdJ;;;;"}